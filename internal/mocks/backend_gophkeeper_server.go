// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/apolsh/yapr-gophkeeper/internal/backend/server (interfaces: GophkeeperService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/apolsh/yapr-gophkeeper/internal/model"
	dto "github.com/apolsh/yapr-gophkeeper/internal/model/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockGophkeeperService is a mock of GophkeeperService interface.
type MockGophkeeperService struct {
	ctrl     *gomock.Controller
	recorder *MockGophkeeperServiceMockRecorder
}

// MockGophkeeperServiceMockRecorder is the mock recorder for MockGophkeeperService.
type MockGophkeeperServiceMockRecorder struct {
	mock *MockGophkeeperService
}

// NewMockGophkeeperService creates a new mock instance.
func NewMockGophkeeperService(ctrl *gomock.Controller) *MockGophkeeperService {
	mock := &MockGophkeeperService{ctrl: ctrl}
	mock.recorder = &MockGophkeeperServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGophkeeperService) EXPECT() *MockGophkeeperServiceMockRecorder {
	return m.recorder
}

// DeleteSecret mocks base method.
func (m *MockGophkeeperService) DeleteSecret(arg0 context.Context, arg1 int, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecret", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecret indicates an expected call of DeleteSecret.
func (mr *MockGophkeeperServiceMockRecorder) DeleteSecret(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecret", reflect.TypeOf((*MockGophkeeperService)(nil).DeleteSecret), arg0, arg1, arg2)
}

// GetSecret mocks base method.
func (m *MockGophkeeperService) GetSecret(arg0 context.Context, arg1 int, arg2 string) (model.EncodedSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", arg0, arg1, arg2)
	ret0, _ := ret[0].(model.EncodedSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockGophkeeperServiceMockRecorder) GetSecret(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockGophkeeperService)(nil).GetSecret), arg0, arg1, arg2)
}

// GetSecretSyncMetaByOwnerAndName mocks base method.
func (m *MockGophkeeperService) GetSecretSyncMetaByOwnerAndName(arg0 context.Context, arg1 int, arg2 string) (dto.SecretSyncMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretSyncMetaByOwnerAndName", arg0, arg1, arg2)
	ret0, _ := ret[0].(dto.SecretSyncMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecretSyncMetaByOwnerAndName indicates an expected call of GetSecretSyncMetaByOwnerAndName.
func (mr *MockGophkeeperServiceMockRecorder) GetSecretSyncMetaByOwnerAndName(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretSyncMetaByOwnerAndName", reflect.TypeOf((*MockGophkeeperService)(nil).GetSecretSyncMetaByOwnerAndName), arg0, arg1, arg2)
}

// GetSecretSyncMetaByUser mocks base method.
func (m *MockGophkeeperService) GetSecretSyncMetaByUser(arg0 context.Context, arg1 int64) ([]dto.SecretSyncMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretSyncMetaByUser", arg0, arg1)
	ret0, _ := ret[0].([]dto.SecretSyncMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecretSyncMetaByUser indicates an expected call of GetSecretSyncMetaByUser.
func (mr *MockGophkeeperServiceMockRecorder) GetSecretSyncMetaByUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretSyncMetaByUser", reflect.TypeOf((*MockGophkeeperService)(nil).GetSecretSyncMetaByUser), arg0, arg1)
}

// Login mocks base method.
func (m *MockGophkeeperService) Login(arg0 context.Context, arg1, arg2 string) (string, model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(model.User)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Login indicates an expected call of Login.
func (mr *MockGophkeeperServiceMockRecorder) Login(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockGophkeeperService)(nil).Login), arg0, arg1, arg2)
}

// Register mocks base method.
func (m *MockGophkeeperService) Register(arg0 context.Context, arg1, arg2 string) (string, model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(model.User)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Register indicates an expected call of Register.
func (mr *MockGophkeeperServiceMockRecorder) Register(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockGophkeeperService)(nil).Register), arg0, arg1, arg2)
}

// SaveEncodedSecret mocks base method.
func (m *MockGophkeeperService) SaveEncodedSecret(arg0 context.Context, arg1 int, arg2 model.EncodedSecret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveEncodedSecret", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveEncodedSecret indicates an expected call of SaveEncodedSecret.
func (mr *MockGophkeeperServiceMockRecorder) SaveEncodedSecret(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveEncodedSecret", reflect.TypeOf((*MockGophkeeperService)(nil).SaveEncodedSecret), arg0, arg1, arg2)
}
